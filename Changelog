
Changed in v0.002:

Konstantin Stepanov (62):
      use parent instead of use base, removed spare uses
      Makefile: installdirs vendor
      fixed some uninitialized variables errors
      some fixes in file cache module
      fixed incorrect Interface::build behavior on empty binds options
      PgSQL: create role implemented
      PgSQL: incorrect role save fixed: wrong (inverse) boolean values handling
      File cache module: exists fix
      PgSQL::Views: get method returns undef if view doesn't exist
      PgSQL::Table::Struct: list method returns undef if table doesn't exist
      PgSQL::Table::Struct: store method: fixed order of modification applies to field definition
      placed all Makefile with tests into t/ subdir for beginning
      tests: index & table create & remove (WIP)
      added buildtests target utilizing Test::Inline module
      inline tests for basic FusqlFS initialization, cache interface & file cache added
      Makefile: buildtests target added
      added basic inline tests for PgSQL module initialization
      removed spare tests
      bail out if pgsql is unaccessable: no duplicate info
      no connect tests in base FusqlFS module
      inline role tests implemented
      Build.PL: generate tests into t, check count set to 2 to try best determining number of tests to run
      gitignore update: no build specific dirs & files, no autogenerated tests
      database cleanup dummy test
      Makefile: autogeneration specific targets
      inline tests for PgSQL tables module
      Build.PL: don't create t/auto
      removed deprecated test Makefile
      mysql backend package renamed to match common package names conventions
      added inline test plan for PgSQL::Table::Struct package
      inline tests for PgSQL::Tables::Data (WIP)
      avoid loading non scalar values via Interface::load() method: considered already parsed
      added testcover target into Makefile
      FusqlFS::Interface renamed to FusqlFS::Artifact
      Makefile: added lint target to test syntax
      added inline tests for PgSQL::Table::Indices
      implemented better inline tests framework
      turned off print errors & warns if --debug option is unset
      disabled carps in cache module for now
      added inline tests for PgSQL::Views module
      Test framework: set_up() method can force all tests skipped by returning false value
      added inline tests into PgSQL::Table::Struct module
      Artifact basic interface methods inline testing
      Covered edge case with empty strategy in Cache module
      renamed $testclass to $_tobj
      use is/isnt instead of ok defined
      Makefile lint target tests tests as well
      basic inline tests for PgSQL::Table::Constraints module added (WIP)
      gitignore update: exclude cover report db
      added inline tests for PgSQL::Queries + implemented rename for queries
      added inline tests for PgSQL::Sequences module
      added inline tests for Cache::Limited module
      Makefile: lint target renamed to testlint, run it before normal tests
      Build.PL: depend on B::Lint for building
      fixed Cache::Limited: FETCH returns undef if entry doesn't exist
      added stubs for PgSQL::Constraint mutation methods (WIP)
      moved common code for lazy artifact creation (on store call, not create) into FusqlFS::Artifact::Table::Lazy module
      PgSQL::Table::Constraints mutators production
      Makefile: test & testcover targets support T variable to run given test only
      Artifact::Table::Lazy create method returns true
      PgSQL::Table::Constraints: implemented mutation methods
      Version 0.002


Changed in v0.0021:

Konstantin Stepanov (20):
      Build.PL: replace {_tpkg} with currently testing package in tests body
      Artifact::Table::Lazy: simple deep clone of template in create() method
      PgSQL::Table::Constraints: fixed constructor inheritance
      PgSQL::Table::Constraints: better tests for create() method
      Build.PL: custom test files formatter
      tests for Cache::Base
      don't call disconnect on object without disconnect
      speed up tests by disconnecting main fusqlfs object on tear down
      PgSQL::Table::Data: return data as single file if no primary key is found
      remember current dir to correct mount point position in case of demonization (which resets cwd to root)
      Makefile: mount, umount & remount targets for tests
      PgSQL::Functions implementation (WIP)
      fusqlfs: Getopt configured to not ignore options
      fusqlfs: one of database or mountpoint parameters can be given via options
      added basic inline tests for PgSQL::Functions
      fixed incorrect (deprecated) class names
      show all functions with the same name but with different in/out params, sorted by arguments, result
      version update
      MANIFEST.SKIP: exclude log files
      PgSQL::Functions: don't duplicate functions with the same names


Changed in v0.003:

Konstantin Stepanov (25):
      PgSQL::Table::Constraints: included struct file in creation template
      gitignore update: distribution files
      PgSQL::Functions: create/store implemention (WIP)
      Makefile: added changelog target, updated phony targets list
      Makefile: major cleanup before dist preparation
      Makefile: README.pod is autoupdated from fusqlfs
      PgSQL::Functions: put arguments into names
      debug option reimplemented
      Artifact: expose dbh via accessor
      PgSQL::Role::Owner: support function owners
      PgSQL::Functions: better Pg 8.3 support, new dir struct
      PgSQL::Functions: function owner
      PgSQL::Functions: more info about functions
      PgSQL::Functions: drop implemented
      PgSQL::Functions: create supports inplace args
      PgSQL::Functions: create implemented
      PgSQL::Functions: rename & store
      docs update: fixed special chars, TODO update
      docs update: links in README
      docs update: better debug options description
      docs update: fixed terms
      PgSQL::Functions: more robust checks in store
      FusqlFS: truncate operates on input cache now
      docs for FusqlFS & FusqlFS::Abstract (WIP)
      Version 0.003


Changed in v0.004:

Konstantin Stepanov (28):
      FusqlFS: new module interface
      Standardized file names
      Makefile: mount target options
      Removed tabs
      Implemented --fnsep
      PgSQL::Table::Data: fixed crash on data select error
      Makefile: cpan compatible test target
      Makefile: cpan target
      PgSQL: some code rewrote shorter
      Makefile: mount target unmounts first
      Makefile: tags target (ctags)
      Makefile: better changelog generation
      FusqlFS::Languages: basic implementation
      Build.PL: use Test:Deep for tests
      PgSQL::Languages: other methods implemented
      Revert "FusqlFS: truncate operates on input cache now"
      PgSQL::Table::Triggers: basic implementation
      PgSQL::Functions: symlink with languages
      PgSQL::Functions: no "arguments" element in struct
      Tests: removed list_ok() in preference to cmp_set()
      PgSQL::Table::Triggers: fixed directory structure
      PgSQL::Table::Triggers: added documentation stub
      Build.PL: don't crush if Test::Inline is not installed
      PgSQL::Table::Triggers: other methods implemented
      PgSQL::Table::Triggers: basic tests
      Tests environment: fine control of DBI debug ouput
      Tests environment: create plperl language & dummy trigger function
      Version 0.004


Changed in v0.005:

Konstantin Stepanov (65):
      Artifact: added simple validation framework
      PgSQL::Table::Triggers: fixed template
      gitignore update: ignore debian subdir
      Artifact: simplified build() call
      Tests: create dummy trigger function correctly
      MANIFEST.SKIP update
      gitignore update: ignore MYMETA.yml
      Makefile: remove MYMETA.yml on realclean
      FusqlFS: symlink() passes full target path to backend
      PgSQL: symlinked paths are absolute
      Backend: use absolute symlinks
      More cache cleanups
      Version 0.0041
      Removed depth from PgSQL::Role::Owner
      FusqlFS::Artifact: documentation
      PgSQL::Table::Indices: removed spare branching
      Artifact::Table::Lazy: documentation
      Artifact::Table::Lazy: implemented store()
      Entry: documentation
      Entry: simplification
      Removed trailing spaces
      Backend::Base: documentation
      Cache: documentation
      Cache strategies documentation updated
      PgSQL::Tables: documentation
      PgSQL: first level packages documentation
      PgSQL::Role::Owner: moved the package into separate file
      Artifact: hprintf function
      FusqlFS: updated synopsis according new interface
      FusqlFS: fixed bug in cache deep cleanup
      FusqlFS: better cache cleanup
      PgSQL::Role::Owner: documentation
      PgSQL::Role::Permissions: moved into separate file
      PgSQL::Role::Permissions: basic implementation
      Artifact: adiff function
      PgSQL::Roles: rewrote store() in a more secure way
      PgSQL::Tables: plugged in permissions module
      PgSQL::Role::Permissions: turned permissions from inside out
      PgSQL::Role::Permissions: documentation
      renamed PgSQL::Role::Permissions to PgSQL::Role::Acl
      PgSQL::Sequences: typo in doc fixed
      PgSQL::Sequences: plugged in Acl module
      PgSQL::Tables: docs updated
      PgSQL::Role::Acl: usage perm char fixed
      PgSQL::Functions: plugged in acl module
      PgSQL::Role::Acl: execute perm char fixed
      PgSQL::Role::Acl: function names handling
      PgSQL::Role::Acl: special default role '%' handling
      PgSQL::Role::Acl: use "my @list = reverse @_;" idiom
      PgSQL::Role::Acl: rename implemented
      PgSQL::Role::Acl: better SQL standard compliance
      PgSQL::Role::Acl: special 'public' role handling
      PgSQL::Role::Acl: updated acl map data
      PgSQL::Role::Owned: documentation
      PgSQL::Role::Base: abstract complexity
      PgSQL::Role::Owned: implementation
      PgSQL::Roles: plugged in PgSQL::Role::Owned module
      PgSQL::Role:*: correct handling of functions
      Separated initialization method from constructor
      PgSQL::Role::Base: renamed parameter `kindc' to `filter'
      PgSQL::Role::Base: documentation update & code cleanup
      PgSQL::Role*: fixed incorrect validate() rules
      Artifact: validate(): optional keys keep undefs on validation fail
      FusqlFS: fixed incorrect cache cleanup
      Version 0.005

